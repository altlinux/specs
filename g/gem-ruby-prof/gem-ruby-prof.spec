# vim: set ft=spec: -*- rpm-spec -*-

%define        _unpackaged_files_terminate_build 1
%def_enable    check
%def_enable    doc
%def_enable    devel
%define        gemname ruby-prof

Name:          gem-ruby-prof
Version:       1.7.0
Release:       alt1
Summary:       Fast code profiler for Ruby
License:       BSD-2-Clause
Group:         Development/Ruby
Url:           https://github.com/ruby-prof/ruby-prof
Vcs:           https://github.com/ruby-prof/ruby-prof.git
Packager:      Ruby Maintainers Team <ruby@packages.altlinux.org>

Source:        %name-%version.tar
BuildRequires(pre): rpm-build-ruby
%if_enabled check
BuildRequires: gem(minitest) >= 0
BuildRequires: gem(rake-compiler) >= 0
%endif

%add_findreq_skiplist %ruby_gemslibdir/**/*
%add_findprov_skiplist %ruby_gemslibdir/**/*
Provides:      gem(ruby-prof) = 1.7.0


%description
ruby-prof is a fast code profiler for MRI Ruby. Its features include:

* Speed - it is a C extension and therefore many times faster than the standard
  Ruby profiler.
* Modes - Ruby prof can measure a number of different parameters, including call
  times, memory usage and object allocations.
* Reports - can generate text and cross-referenced html reports
  - Flat Profiles - similar to the reports generated by the standard Ruby
    profiler
  - Graph profiles - similar to GProf, these show how long a method runs, which
    methods call it and which methods it calls.
  - Call tree profiles - outputs results in the calltree format suitable for the
    KCacheGrind profiling tool.
  - Many more - see reports section of this README.
* Threads - supports profiling multiple threads simultaneously


%package       -n ruby-prof
Version:       1.7.0
Release:       alt1
Summary:       Fast code profiler for Ruby executable(s)
Summary(ru_RU.UTF-8): Исполнямка для самоцвета ruby-prof
Group:         Development/Ruby
BuildArch:     noarch

Requires:      gem(ruby-prof) = 1.7.0

%description   -n ruby-prof
Fast code profiler for Ruby executable(s).

ruby-prof is a fast code profiler for MRI Ruby. Its features include:

* Speed - it is a C extension and therefore many times faster than the standard
Ruby profiler.
* Modes - Ruby prof can measure a number of different parameters, including call
times, memory usage and object allocations.
* Reports - can generate text and cross-referenced html reports
  - Flat Profiles - similar to the reports generated by the standard Ruby
    profiler
  - Graph profiles - similar to GProf, these show how long a method runs, which
    methods call it and which methods it calls.
  - Call tree profiles - outputs results in the calltree format suitable for the
    KCacheGrind profiling tool.
  - Many more - see reports section of this README.
* Threads - supports profiling multiple threads simultaneously

%description   -n ruby-prof -l ru_RU.UTF-8
Исполнямка для самоцвета ruby-prof.


%if_enabled    doc
%package       -n gem-ruby-prof-doc
Version:       1.7.0
Release:       alt1
Summary:       Fast code profiler for Ruby documentation files
Summary(ru_RU.UTF-8): Файлы сведений для самоцвета ruby-prof
Group:         Development/Documentation
BuildArch:     noarch

Requires:      gem(ruby-prof) = 1.7.0
Obsoletes:     ruby-ruby-prof-doc
Provides:      ruby-ruby-prof-doc

%description   -n gem-ruby-prof-doc
Fast code profiler for Ruby documentation files.

ruby-prof is a fast code profiler for MRI Ruby. Its features include:

* Speed - it is a C extension and therefore many times faster than the standard
  Ruby profiler.
* Modes - Ruby prof can measure a number of different parameters, including call
  times, memory usage and object allocations.
* Reports - can generate text and cross-referenced html reports
  - Flat Profiles - similar to the reports generated by the standard Ruby
    profiler
  - Graph profiles - similar to GProf, these show how long a method runs, which
    methods call it and which methods it calls.
  - Call tree profiles - outputs results in the calltree format suitable for the
    KCacheGrind profiling tool.
  - Many more - see reports section of this README.
* Threads - supports profiling multiple threads simultaneously

%description   -n gem-ruby-prof-doc -l ru_RU.UTF-8
Файлы сведений для самоцвета ruby-prof.
%endif


%if_enabled    devel
%package       -n gem-ruby-prof-devel
Version:       1.7.0
Release:       alt1
Summary:       Fast code profiler for Ruby development package
Summary(ru_RU.UTF-8): Файлы для разработки самоцвета ruby-prof
Group:         Development/Ruby
BuildArch:     noarch

Requires:      gem(ruby-prof) = 1.7.0
Requires:      gem(minitest) >= 0
Requires:      gem(rake-compiler) >= 0

%description   -n gem-ruby-prof-devel
Fast code profiler for Ruby development package.

ruby-prof is a fast code profiler for MRI Ruby. Its features include:

* Speed - it is a C extension and therefore many times faster than the standard
  Ruby profiler.
* Modes - Ruby prof can measure a number of different parameters, including call
  times, memory usage and object allocations.
* Reports - can generate text and cross-referenced html reports - Flat Profiles
- similar to the reports generated by the standard Ruby profiler - Graph
  profiles - similar to GProf, these show how long a method runs, which methods
  call it and which methods it calls. - Call tree profiles - outputs results in
  the calltree format suitable for the KCacheGrind profiling tool. - Many more -
  see reports section of this README.
* Threads - supports profiling multiple threads simultaneously

%description   -n gem-ruby-prof-devel -l ru_RU.UTF-8
Файлы для разработки самоцвета ruby-prof.
%endif


%prep
%setup

%build
%ruby_build

%install
%ruby_install

%check
%ruby_test

%files
%doc README.md
%ruby_gemspec
%ruby_gemlibdir
%ruby_gemextdir

%files         -n ruby-prof
%doc README.md
%_bindir/ruby-prof
%_bindir/ruby-prof-check-trace

%if_enabled    doc
%files         -n gem-ruby-prof-doc
%doc README.md
%ruby_gemdocdir
%endif

%if_enabled    devel
%files         -n gem-ruby-prof-devel
%doc README.md
%ruby_includedir/*
%endif


%changelog
* Wed Jul 24 2024 Pavel Skrylev <majioa@altlinux.org> 1.7.0-alt1
- ^ 1.4.2 -> 1.7.0

* Sat Apr 24 2021 Pavel Skrylev <majioa@altlinux.org> 1.4.2-alt1
- new version 1.4.2

* Tue Mar 31 2020 Pavel Skrylev <majioa@altlinux.org> 0.18.0-alt1
- ^ 0.17.0 -> 0.18.0
- ! spec tags

* Tue Apr 16 2019 Pavel Skrylev <majioa@altlinux.org> 0.17.0-alt2
- Use Ruby Policy 2.0

* Wed Jul 11 2018 Andrey Cherepanov <cas@altlinux.org> 0.17.0-alt1.3
- Rebuild with new Ruby autorequirements.

* Fri Mar 30 2018 Andrey Cherepanov <cas@altlinux.org> 0.17.0-alt1.2
- Rebuild with Ruby 2.5.1

* Tue Mar 13 2018 Andrey Cherepanov <cas@altlinux.org> 0.17.0-alt1.1
- Rebuild with Ruby 2.5.0

* Tue Dec 19 2017 Andrey Cherepanov <cas@altlinux.org> 0.17.0-alt1
- New version.

* Mon Sep 25 2017 Andrey Cherepanov <cas@altlinux.org> 0.16.2-alt2.2
- Rebuild with Ruby 2.4.2

* Tue Sep 05 2017 Andrey Cherepanov <cas@altlinux.org> 0.16.2-alt2.1
- Rebuild with Ruby 2.4.1

* Sat Mar 11 2017 Andrey Cherepanov <cas@altlinux.org> 0.16.2-alt2
- Rebuild with new %%ruby_sitearchdir location

* Fri Sep 23 2016 Andrey Cherepanov <cas@altlinux.org> 0.16.2-alt1
- new version 0.16.2

* Wed Mar 19 2014 Led <led@altlinux.ru> 0.9.2-alt1.3
- Rebuilt with ruby-2.0.0-alt1

* Sat Mar 15 2014 Led <led@altlinux.ru> 0.9.2-alt1.2
- fix ruby 2.0 compile error

* Wed Dec 05 2012 Led <led@altlinux.ru> 0.9.2-alt1.1
- Rebuilt with ruby-1.9.3-alt1

* Wed Mar 23 2011 Andriy Stepanov <stanv@altlinux.ru> 0.9.2-alt1
- [0.9.2]

* Mon Jun 29 2009 Alexey I. Froloff <raorn@altlinux.org> 0.7.3-alt1
- [0.7.3]

* Mon Nov 10 2008 Sir Raorn <raorn@altlinux.ru> 0.6.1-alt1
- Built for Sisyphus
